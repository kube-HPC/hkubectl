#!/usr/bin/env node
const yargs = require('yargs');
const chalk = require('chalk');
const { readConfig } = require('./helpers/config');
const { config } = require('./builders/config');
const { exec } = require('./builders/exec');
// const { readme } = require('./commands/readme');
const algorithms = require('./builders/algorithm');
const pipelines = require('./builders/pipeline');
const dryRun = require('./builders/dry-run');
const sync = require('./builders/sync');
const main = async () => {
  const configFile = await readConfig();

  yargs.config(configFile);
  if (yargs.argv.endpoint) {
    console.log(`${chalk.bold(yargs.argv.$0)} is configured to ${chalk.bold(yargs.argv.endpoint)}`);
  }
  yargs.command(exec)
  yargs.command(algorithms)
  yargs.command(pipelines)
  yargs.command(dryRun)
  yargs.command(sync)
  yargs.command(config)
  yargs.options('rejectUnauthorized', {
    description: 'set to false to ignore certificate signing errors. Useful for self signed TLS certificate',
    type: "boolean"
  })
  yargs.options('endpoint', {
    description: 'url of hkube api endpoint',
    type: "string"
  })
    .recommendCommands()
    .showHelpOnFail()
    .help()
    .epilog(chalk.bold('for more information visit http://hkube.io'))
    .completion()
    .argv;

  const args = yargs.argv;

  if (!args._[0]) {
    if (args.endpoint) {
      yargs.showHelp();
    }
    else{
      config.handler(args);
    }
  }
}

main();
